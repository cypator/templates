name: Deploy
on:
  workflow_call:
    secrets:
      aws-access-key-id:
        description: "access key id for ecr"
        required: true
      aws-secret-access-key:
        description: "secret access key for ecr"
        required: true
      helm-repo-access-key:
        description: "clone into devops repo"
        required: true
  workflow_dispatch:
    inputs:
      target-env:
        type: choice
        description: Environment to deploy to
        default: develop
        required: true
        options:
          - develop
      confirm-env:
        type: string
        description: Confirm the environment to deploy
        required: true
        default: develop
jobs:
  deploy:
    runs-on: ubuntu-24.04
    if: github.event.inputs.target-env == github.event.inputs.confirm-env
    steps:
      - name: setup python
        uses: actions/setup-python@v2
        with:
          python-version: 3.8 #install the python needed
      - uses: actions/checkout@v2
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.aws-access-key-id }}
          aws-secret-access-key: ${{ secrets.aws-secret-access-key }}
          aws-region: us-east-1
      - name: download zip file artifact from s3
        run: |
          command=$(aws s3 cp s3://cypatorbackend ./zips --recursive)
          echo "s3 command: $command"
          find ./zips -name 53-feature-check-ci.zip
      - uses: montudor/action-zip@v1
        with:
          args: unzip -qq ./zips/64-feature-check-ci.zip -d helm
      - name: see the path of unzip
        run: |
          pwd
          ls -la
          cd helm/devops/cypator
          ls -la
      - name: set namespace
        id: set-namespace
        run: |
          NAMESPACE=$TARGET_ENV
          echo "Will deploy to $NAMESPACE"
          echo "NAMESPACE=$NAMESPACE" >> $GITHUB_ENV
        env:
          TARGET_ENV: develop
      - name: set cluster name
        id: set-cluster-name
        run: |
          CLUSTER_NAME="Cypator-dev"
          if [ "$TARGET_ENV" = "prod" ]; then
            CLUSTER_NAME="Cypator-$TARGET_ENV"
          fi
          echo "Will deploy to $CLUSTER_NAME eks cluster"
          echo "CLUSTER_NAME=$CLUSTER_NAME" >> $GITHUB_ENV
        env:
          TARGET_ENV: develop
      - name: create app yaml
        id: create-namespace-yaml
        run: |
          cp $GITHUB_WORKSPACE/.github/workflows/deploy/namespace.yaml namespace.yaml
          sed -i "s|NAMESPACE_PLACEHOLDER|$NAMESPACE|g" namespace.yaml
          cat namespace.yaml
          aws eks update-kubeconfig --region $AWS_REGION --name $CLUSTER_NAME
          kubectl apply -f namespace.yaml
        env:
          AWS_REGION: us-east-1
      - name: create secrets
        id: create-secrets
        run: |
          #download secret from AWS
          echo "env: $TARGET_ENV"
          SECRETS="secret-$TARGET_ENV.yaml"
          secret_arn=$(aws secretsmanager list-secrets --query "SecretList[?Tags[?Key=='deployment' && Value=='$TARGET_ENV']]" | jq -r '.[0].ARN')
          echo $(aws secretsmanager get-secret-value --secret-id $secret_arn | jq -r '.SecretString') > $SECRETS_FILE_PATH
          python .github/workflows/scripts/secrets-creator.py
          cd secrets
          ls
          kubectl apply -f . -n $TARGET_ENV
        env:
          TARGET_ENV: develop
          SECRETS_FILE_PATH: ./values-secrets-raw.json
          SECRETS_TEMPLATE_FILE_PATH: .github/workflows/scripts/secret_template.yaml
      - name: installing helm 
        run: |
          curl -O https://raw.githubusercontent.com/helm/helm/master/scripts/get-helm-3
          bash ./get-helm-3
          helm version
      - name: deploy app
        id: deploy-app
        run: |
          sudo chmod -R 777 helm
          ls -la
          cd helm/devops/cypator
          helm dependency update
          helm upgrade --install --wait cypator . --create-namespace --namespace $TARGET_ENV --set global.domain=dev.cypator.net -f services-image-tags.yaml
        env:
          TARGET_ENV: develop
